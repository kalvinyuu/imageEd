(undo-tree-save-format-version . 1)
"7ec1c5bc9a05d966d5cf7d2f4de5bce195c05d1b"
[nil nil nil nil (26773 65534 151676 0) 0 nil]
([nil nil ((#("bun --hot src/index.tsx" 0 23 (face font-lock-string-face fontified t)) . 179) (undo-tree-id36 . -23) (undo-tree-id37 . -23) (undo-tree-id38 . -23) (undo-tree-id39 . -23) (undo-tree-id40 . -23) (undo-tree-id41 . -23) (t 26773 65268 2000 980000)) nil (26773 65534 151675 0) 0 nil])
([nil nil ((179 . 184)) nil (26773 65534 151670 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -183) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 184) nil (26773 65534 151669 0) 0 nil])
([nil nil ((183 . 184)) nil (26773 65534 151667 0) 0 nil])
([nil nil ((#("    \"dev\": \"vite-\",
    \"start\": \"NODE_ENV=production bun src/index.tsx\",
    \"build\": \"bun run build.ts\"" 0 4 (fontified t) 4 9 (face font-lock-string-face fontified t) 9 11 (fontified t) 11 18 (face font-lock-string-face fontified t) 18 20 (fontified t) 20 24 (fontified t) 24 31 (face font-lock-string-face fontified t) 31 33 (fontified t) 33 72 (face font-lock-string-face fontified t) 72 78 (fontified t) 78 85 (face font-lock-string-face fontified t) 85 87 (fontified t) 87 105 (face font-lock-string-face fontified t)) . 167) (undo-tree-id3 . -105) (undo-tree-id4 . -12) (undo-tree-id5 . -12) (undo-tree-id6 . -12) (undo-tree-id7 . -12) (undo-tree-id8 . -12) (undo-tree-id9 . -12) (undo-tree-id10 . -12) (undo-tree-id11 . -12) (undo-tree-id12 . -12) (undo-tree-id13 . -13) (undo-tree-id14 . -15) (undo-tree-id15 . -13) (undo-tree-id16 . -14) (undo-tree-id17 . -15) (undo-tree-id18 . -15) (undo-tree-id19 . -16) (undo-tree-id20 . -16) (undo-tree-id21 . -16) (undo-tree-id22 . -16) (undo-tree-id23 . -16) (undo-tree-id24 . -16) (undo-tree-id25 . -17) (undo-tree-id26 . -105) (undo-tree-id27 . -105) (undo-tree-id28 . -105) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -105) (undo-tree-id32 . -12) (undo-tree-id33 . -105)) nil (26773 65534 151664 0) 0 nil])
([nil nil ((167 . 170)) nil (26773 65534 151642 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 247 . 248) (nil fontified nil 170 . 248) (170 . 248)) nil (26773 65534 151641 0) 0 nil])
([nil nil ((222 . 225) (#("  " 0 2 (fontified t)) . 222) (196 . 199) (#("  " 0 2 (fontified t)) . 196) (#("  " 0 2 (fontified t)) . -170) 167) nil (26773 65534 151639 0) 0 nil])
([nil nil ((633 . 634) (#("  " 0 2 (fontified t)) . 633) (608 . 610) (#("    " 0 4 (fontified t)) . 608) (579 . 581) (#("    " 0 4 (fontified t)) . 579) (554 . 556) (#("    " 0 4 (fontified t)) . 554) (532 . 533) (#("  " 0 2 (fontified t)) . 532) (528 . 529) (#("  " 0 2 (fontified t)) . 528) (509 . 511) (#("    " 0 4 (fontified t)) . 509) (482 . 484) (#("    " 0 4 (fontified t)) . 482) (460 . 462) (#("    " 0 4 (fontified t)) . 460) (442 . 444) (#("    " 0 4 (fontified t)) . 442) (406 . 408) (#("    " 0 4 (fontified t)) . 406) (360 . 362) (#("    " 0 4 (fontified t)) . 360) (311 . 313) (#("    " 0 4 (fontified t)) . 311) (262 . 264) (#("    " 0 4 (fontified t)) . 262) (243 . 244) (#("  " 0 2 (fontified t)) . 243) (239 . 240) (#("  " 0 2 (fontified t)) . 239) (214 . 215) (#("  " 0 2 (fontified t)) . 214) (189 . 190) (#("  " 0 2 (fontified t)) . 189) (161 . 162) (#("  " 0 2 (fontified t)) . 161) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (146 . 147) (#("  " 0 2 (fontified t)) . 146) (118 . 119) (#("  " 0 2 (fontified t)) . 118) (92 . 93) (#("  " 0 2 (fontified t)) . 92) (73 . 74) (#("  " 0 2 (fontified t)) . 73) (55 . 56) (#("  " 0 2 (fontified t)) . 55) (34 . 35) (#("  " 0 2 (fontified t)) . 34) (3 . 4) (#("  " 0 2 (fontified t)) . 3) 1) nil (26773 65534 151630 0) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-string-face fontified t)) . -13) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -14) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -15) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -16) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -17) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -18) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -19) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -20) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -21) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -22) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -23) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -24) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -25) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -26) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -27) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -28) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -29) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -30) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) 31 (t 26773 65534 158067 54000)) nil (26774 526 248299 0) 0 nil])
([nil nil ((13 . 19)) nil (26774 526 248111 0) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-string-face fontified t)) . -18) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 19) nil (26774 526 248110 0) 0 nil])
([nil nil ((18 . 19)) nil (26774 526 248106 0) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-string-face fontified t)) . -18) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 19) nil (26774 526 248104 0) 0 nil])
([nil current ((18 . 21)) nil (26774 526 248091 0) 0 nil])
nil
